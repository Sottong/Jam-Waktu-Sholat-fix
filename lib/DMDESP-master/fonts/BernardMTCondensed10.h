

/*
 * Fareed Read
 * http://www.facebook.com/fareed.reads
 *
 * BernardMTCondensed10
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : BernardMTCondensed10.h
 * Date                : 27.06.2018
 * Font size in bytes  : 3675
 * Font width          : 10
 * Font height         : 9
 * Font first char     : 32
 * Font last char      : 128
 * Font used chars     : 96
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef BERNARDMTCONDENSED10_H
#define BERNARDMTCONDENSED10_H

#define BERNARDMTCONDENSED10_WIDTH 10
#define BERNARDMTCONDENSED10_HEIGHT 9

const static uint8_t BernardMTCondensed10[] PROGMEM = {
    0x0E, 0x5B, // size
    0x0A, // width
    0x09, // height
    0x20, // first char
    0x60, // char count
    
    // char widths
    0x00, 0x02, 0x04, 0x06, 0x04, 0x07, 0x05, 0x02, 0x03, 0x03, 
    0x04, 0x06, 0x02, 0x03, 0x02, 0x05, 0x04, 0x04, 0x04, 0x04, 
    0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x06, 0x06, 
    0x06, 0x04, 0x08, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 
    0x06, 0x03, 0x03, 0x05, 0x04, 0x06, 0x05, 0x04, 0x04, 0x04, 
    0x05, 0x03, 0x05, 0x05, 0x05, 0x07, 0x05, 0x05, 0x04, 0x03, 
    0x05, 0x02, 0x05, 0x05, 0x01, 0x05, 0x04, 0x03, 0x05, 0x03, 
    0x03, 0x04, 0x05, 0x03, 0x02, 0x05, 0x03, 0x07, 0x05, 0x04, 
    0x04, 0x05, 0x03, 0x02, 0x03, 0x05, 0x04, 0x06, 0x04, 0x04, 
    0x04, 0x04, 0x01, 0x04, 0x05, 0x06, 
    
    // font data
    0xCF, 0xCF, 0x00, 0x00, // 33
    0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, // 34
    0xE4, 0x3C, 0x27, 0xE4, 0x3C, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 35
    0xC6, 0x8D, 0xFF, 0xF3, 0x00, 0x00, 0x80, 0x00, // 36
    0x0E, 0x89, 0x6F, 0x18, 0xE6, 0x91, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 37
    0x70, 0xCE, 0xBD, 0xE3, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, // 38
    0x07, 0x07, 0x00, 0x00, // 39
    0x7C, 0xFE, 0x01, 0x00, 0x00, 0x80, // 40
    0x01, 0xFE, 0x7C, 0x80, 0x00, 0x00, // 41
    0x0A, 0x0E, 0x0E, 0x0A, 0x00, 0x00, 0x00, 0x00, // 42
    0x10, 0x10, 0x7C, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 43
    0x40, 0xC0, 0x80, 0x00, // 44
    0x20, 0x30, 0x10, 0x00, 0x00, 0x00, // 45
    0xC0, 0xC0, 0x00, 0x00, // 46
    0x80, 0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 47
    0x7E, 0xFF, 0x81, 0x7E, 0x00, 0x00, 0x00, 0x00, // 48
    0x82, 0xFE, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, // 49
    0xC6, 0xA1, 0x9F, 0xCE, 0x00, 0x00, 0x00, 0x00, // 50
    0x66, 0x89, 0xFF, 0x76, 0x00, 0x00, 0x00, 0x00, // 51
    0x38, 0xAC, 0xFF, 0xFF, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, // 52
    0x6F, 0x89, 0xF9, 0x70, 0x00, 0x00, 0x00, 0x00, // 53
    0x7E, 0xFF, 0x85, 0x78, 0x00, 0x00, 0x00, 0x00, // 54
    0x83, 0xF1, 0xFD, 0x83, 0x00, 0x00, 0x00, 0x00, // 55
    0x76, 0x8D, 0x99, 0x76, 0x00, 0x00, 0x00, 0x00, // 56
    0x1E, 0xBF, 0xA1, 0x7E, 0x00, 0x00, 0x00, 0x00, // 57
    0xCC, 0xCC, 0x00, 0x00, // 58
    0xCC, 0xCC, 0x80, 0x00, // 59
    0x10, 0x30, 0x28, 0x28, 0x48, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 60
    0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 61
    0x44, 0x48, 0x28, 0x28, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 62
    0x03, 0xD1, 0xCF, 0x06, 0x00, 0x00, 0x00, 0x00, // 63
    0x7C, 0x82, 0x79, 0x4D, 0x75, 0x5D, 0xA1, 0x9E, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, // 64
    0xFD, 0x27, 0xFF, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 65
    0xFF, 0xFF, 0x89, 0x76, 0x00, 0x00, 0x00, 0x00, // 66
    0x7E, 0xFF, 0x81, 0xC3, 0x00, 0x00, 0x00, 0x00, // 67
    0xFF, 0xFF, 0x81, 0x7E, 0x00, 0x00, 0x00, 0x00, // 68
    0xFF, 0xFF, 0x89, 0xDB, 0x00, 0x00, 0x00, 0x00, // 69
    0xFF, 0xFF, 0x89, 0x1B, 0x00, 0x00, 0x00, 0x00, // 70
    0x7E, 0xFF, 0x81, 0xFB, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // 71
    0xFF, 0xFF, 0x08, 0xFF, 0xFF, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 72
    0xFF, 0xFF, 0x81, 0x00, 0x00, 0x00, // 73
    0xFF, 0xFF, 0x01, 0x80, 0x00, 0x00, // 74
    0xFF, 0xFF, 0x1C, 0xFF, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, // 75
    0xFF, 0xFF, 0x81, 0xC0, 0x00, 0x00, 0x00, 0x00, // 76
    0xFF, 0x1F, 0x18, 0xFF, 0xFF, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 77
    0xFF, 0x1F, 0x7C, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 78
    0x7E, 0xFF, 0x81, 0x7E, 0x00, 0x00, 0x00, 0x00, // 79
    0xFF, 0xFF, 0x91, 0x0E, 0x00, 0x00, 0x00, 0x00, // 80
    0x7E, 0xFF, 0xC1, 0xFE, 0x00, 0x00, 0x00, 0x80, // 81
    0xFF, 0xFF, 0x09, 0xF6, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 82
    0xCF, 0x99, 0xF3, 0x00, 0x00, 0x00, // 83
    0x81, 0xFF, 0xFF, 0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // 84
    0xFF, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 85
    0x0F, 0xFF, 0xF0, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 86
    0x0F, 0xF0, 0x1F, 0x7F, 0xF8, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 87
    0xC7, 0x3F, 0xFC, 0xC3, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, // 88
    0x87, 0xFF, 0xF8, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 89
    0xC3, 0xFD, 0xBF, 0xC3, 0x00, 0x00, 0x00, 0x00, // 90
    0xFF, 0xFF, 0x01, 0x80, 0x80, 0x80, // 91
    0x01, 0x06, 0x18, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 92
    0xFF, 0xFF, 0x80, 0x80, // 93
    0x08, 0x06, 0x01, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // 94
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, // 95
    0x01, 0x00, // 96
    0xEC, 0xFC, 0x94, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 97
    0xFF, 0xFF, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, // 98
    0x78, 0xFC, 0x84, 0x00, 0x00, 0x00, // 99
    0x78, 0xFC, 0x85, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 100
    0x78, 0x94, 0xDC, 0x00, 0x00, 0x00, // 101
    0xFF, 0xFD, 0x85, 0x00, 0x00, 0x00, // 102
    0xF8, 0xC4, 0xFF, 0xBB, 0x80, 0x80, 0x80, 0x80, // 103
    0xFF, 0xFF, 0x04, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 104
    0xFD, 0xFD, 0x80, 0x00, 0x00, 0x00, // 105
    0xFD, 0xFD, 0x80, 0x00, // 106
    0xFF, 0xFF, 0x30, 0xFC, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, // 107
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, // 108
    0xFC, 0xFC, 0x04, 0xFC, 0x04, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 109
    0xFC, 0xFC, 0x04, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 110
    0x78, 0xFC, 0x84, 0x78, 0x00, 0x00, 0x00, 0x00, // 111
    0xFC, 0xFC, 0x84, 0x78, 0x80, 0x80, 0x00, 0x00, // 112
    0x78, 0xFC, 0x84, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, // 113
    0xFC, 0xFC, 0x8C, 0x00, 0x00, 0x00, // 114
    0x9C, 0xE4, 0x00, 0x00, // 115
    0xFE, 0xFF, 0x84, 0x00, 0x00, 0x00, // 116
    0x7C, 0xFC, 0x80, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 117
    0xFC, 0xE0, 0x1C, 0x04, 0x00, 0x00, 0x00, 0x00, // 118
    0x3C, 0xFC, 0x1C, 0xFC, 0x3C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 119
    0xDC, 0xF8, 0xCC, 0x84, 0x00, 0x00, 0x00, 0x00, // 120
    0x3C, 0xFC, 0x3C, 0x04, 0x80, 0x80, 0x00, 0x00, // 121
    0xCC, 0xF4, 0xBC, 0xC4, 0x00, 0x00, 0x00, 0x00, // 122
    0x10, 0xEE, 0x01, 0x01, 0x00, 0x00, 0x80, 0x80, // 123
    0xFF, 0x80, // 124
    0x01, 0x01, 0xEE, 0x10, 0x80, 0x80, 0x00, 0x00, // 125
    0x18, 0x08, 0x18, 0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, // 126
    0xFC, 0x84, 0x84, 0x84, 0x84, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // 127
    
};

#endif
